---
- fail:
    msg: This role required openshift_master_default_subdomain or openshift_master_logging_url be set
  when: openshift.master.logging_public_url | default(openshift_master_logging_public_url | default(openshift.master.default_subdomain | default(openshift_master_default_subdomain | default(none)))) is none

- set_fact:
    # Prefer the master facts over bare variables if present, prefer
    # logging_public_url over creating a default using default_subdomain
    logging_hostname: "{{ openshift.master.logging_public_url
                          | default(openshift_master_logging_public_url
                          | default('hawkular-logging.' ~ (openshift.master.default_subdomain
                          | default(openshift_master_default_subdomain ))))
                          | oo_hostname_from_url }}"
    logging_persistence: "{{ openshift.hosted.logging.storage.kind is not none }}"
    logging_dynamic_vol: "{{ openshift.hosted.logging.storage.kind == 'dynamic' }}"
    logging_template_dir: "/usr/share/openshift/examples/infrastructure-templates/origin"
    elasticsearch_nodes: "{{ '--param ES_CLUSTER_SIZE=' ~ openshift.hosted.logging.elasticsearch.nodes if 'elasticsearch' in openshift.hosted.logging and 'nodes' in openshift.hosted.logging.elasticsearch else '' }}"
    elasticsearch_pv_size: "{{ '--param ES_PVC_SIZE=' ~ openshift.hosted.logging.storage.volume.size if openshift.hosted.logging.storage.volume.size | default(none) is not none else '' }}"

- name: Check for logging project
  command: >
    {{ openshift.common.client_binary }}
    --config={{ openshift_hosted_kubeconfig }}
    get project/logging
  register: logging_project
  changed_when: false
  failed_when: false

- name: Create logging project
  command: >
    {{ openshift.common.admin_binary }}
    --config={{ openshift_hosted_kubeconfig }}
    new-project logging --node-selector=""
  when: logging_project.rc == 1

- name: Test if logging-deployer secret exists
  command: >
    {{ openshift.common.client_binary }}
    --config={{ openshift_hosted_kubeconfig }}
    --namespace=logging
    get secret logging-deployer -o json
  register: secret
  changed_when: false
  failed_when: false

- name: Create logging-deployer secret
  command: >
    {{ openshift.common.client_binary }}
    --config={{ openshift_hosted_kubeconfig }}
    --namespace=logging
    secrets new logging-deployer nothing=/dev/null
  when: secret.rc == 1

# This is a really weak check, need to collaborate with the logging team
# to come up with a better way to make this idempotent
- name: Check for logging-deployer SA
  command: >
    {{ openshift.common.client_binary }}
    --config={{ openshift_hosted_kubeconfig }}
    --namespace=logging
    get sa/logging-deployer
  register: logging_sa
  changed_when: false
  failed_when: false

- name: Create deployer service account and roles
  shell: >
    {{ openshift.common.client_binary }}
    --config={{ openshift_hosted_kubeconfig }}
    --namespace=openshift
    process logging-deployer-account-template |
    {{ openshift.common.client_binary }}
    --config={{ openshift_hosted_kubeconfig }}
    apply -n logging -f -
  when: logging_sa.rc == 1

- name: Add edit role to sa
  command: >
    {{ openshift.common.client_binary }}
    --config={{ openshift_hosted_kubeconfig }}
    --namespace logging
    policy add-role-to-user edit --serviceaccount logging-deployer

- name: Add daemonset-admin role to sa
  command: >
    {{ openshift.common.client_binary }}
    --config={{ openshift_hosted_kubeconfig }}
    --namespace logging
    policy add-role-to-user daemonset-admin --serviceaccount logging-deployer

- name: Add edit permission to the logging project to logging-deployer SA
  command: >
    {{ openshift.common.admin_binary }}
    --config={{ openshift_hosted_kubeconfig }}
    --namespace logging
    policy add-cluster-role-to-user oauth-editor
    system:serviceaccount:logging:logging-deployer
  when: "'system:serviceaccount:logging:logging-deployer' not in edit_rolebindings.stdout"

- name: Add cluster-reader permission to the logging project to heapster SA
  command: >
    {{ openshift.common.admin_binary }}
    --config={{ openshift_hosted_kubeconfig }}
    --namespace logging
    policy add-scc-to-user
    privileged system:serviceaccount:logging:aggregated-logging-fluentd

# TODO: test scc before adding
- name: Add the privileged scc for fluentd serviceaccount
  command: >
    oadm policy  add-cluster-role-to-user cluster-reader
    system:serviceaccount:logging:aggregated-logging-fluentd

- name: Create logging-deployer-template
  command: >
    {{ openshift.common.client_binary }} \
    --config={{ openshift_hosted_kubeconfig }} \
    --namespace logging \
    new-app logging-deployer-template \
    --param KIBANA_HOSTNAME={{ logging_hostname }} \
    --param PUBLIC_MASTER_URL={{ openshift.master.api_url }} \
    --param IMAGE_PREFIX={{ openshift.hosted.logging.deployer.prefix }} \
    --param IMAGE_VERSION={{ openshift.hosted.logging.deployer.version }} \
    {{ elasticsearch_nodes }} \
    {{ elasticsearch_pv_size }} \
    --param ES_PVC_PREFIX="logging-dynamic" \
    --param ES_PVC_DYNAMIC=true \
    --param MODE="reinstall" \

- name: Label nodes for fluentd
  command: >
    {{ openshift.common.client_binary }} \
    --config={{ openshift_hosted_kubeconfig }} \
    label nodes --all --overwrite logging-infra-fluentd=true
